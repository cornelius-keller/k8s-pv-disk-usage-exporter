# Add this to your prometheus "scrape_configs"

# Scrape kubernetes PV disk usage exporter instances by looking for a
# container port named "pv-metrics".
- job_name: 'kubernetes-pv-disk-usage-exporter'

  kubernetes_sd_configs:
    - role: pod

  relabel_configs:
    # Match the name of the metrics port of disk-usage-exporter containers.
    - source_labels: [__meta_kubernetes_pod_container_port_name]
      action: keep
      regex: pv-metrics
    # Construct __address__ from the metrics port number
    - source_labels: [__address__, __meta_kubernetes_pod_container_port_number]
      action: replace
      regex: (.+):(?:\d+);(\d+)
      replacement: ${1}:${2}

    - source_labels: [__meta_kubernetes_pod_container_port_name]
      action: keep
      regex: pv-metrics
    - source_labels: [__address__, __meta_kubernetes_pod_container_port_number]
      action: replace
      regex: (.+):(?:\d+);(\d+)
      replacement: ${1}:${2}
      target_label: __address__
    - source_labels: [__meta_kubernetes_pod_name]
      target_label: instance

  # Optional, a workaround if you don't use "Recording rules" or don't want to
  # have ignore "without(instance)" in all your queries.
  # metric_relabel_configs:
  #     # Replace the "instance" label for each metric, so that the
  #     # series stays the same even if an exporter pod is restarted, or
  #     # the PV is mounted to another node.
  #   - action: replace
  #     source_labels: [volume_instance]
  #     target_label: instance
